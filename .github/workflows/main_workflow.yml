name: Automatic tests pipeline

on: [push]

jobs:
#--- Build the package and save as artifacts----
   packageing:
      name: Build the package
      runs-on: ubuntu-latest
      outputs:
        pkg_file: ${{ steps.base_def.outputs.filename }}
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python39
          uses: actions/setup-python@v4
          with:
            python-version: '3.9'
            #cache: 'poetry'
        # You can test your matrix by printing the current Python version
        - name: Display Python version
          run: python -c "import sys; print(sys.version)"
        - name: remove previous builds
          run: |
              rm -f dist/metobs_toolkit-*.whl
              rm -f dist/metobs_toolkit-*.tar.gz
        - name: Install poetry
          run: |
              pip install poetry
        - name: Install dependencies and build
          run: |
              #poetry update --without titan,documentation
              #poetry install --without titan,documentation
              poetry update
              poetry install 
              poetry build
        - name: get distribution file name
          id: base_def
          run: |
              rel_path=$(find dist/ -name 'valenspy-*.tar.gz' -print -quit)
              echo "filename=$(basename "$rel_path")" >> $GITHUB_OUTPUT

        - name: save package as artifact
          uses: actions/upload-artifact@v3
          with:
            name: package_build
            path: dist/*.tar.gz

# ---- Installing the package test ------#
   #--- Package os installation ---
   mac_install_testing:
     name: Installation on Mac latest
     needs: packageing
     runs-on: macos-latest
     steps:
       - uses: actions/checkout@v3
       - name: Set up Python39
         uses: actions/setup-python@v4
         with:
           python-version: "3.9"
       - name: Download the package build
         uses: actions/download-artifact@v3
         with:
           name: package_build

       - name: Install the package
         run: |
             python3 -m pip install ${{needs.packageing.outputs.pkg_file}}
       - name: Run tests
         run: |
             python tests/push_test/import_test.py

      
