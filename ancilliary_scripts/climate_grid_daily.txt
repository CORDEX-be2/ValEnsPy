rm(list = ls()) 
Sys.setenv(TZ = "GMT")
library(ROracle)
library(reshape2)
dir.univ <- "/home/bertvs/fileserver/home/ARCHIVE_bertvs/R/universal_files_packages/"
dir.aux.fun <- paste0(dir.univ, "aux_functions/")
source(paste0(dir.aux.fun, "aux_params.R")) #muliple auxiliary functions
source(paste0(dir.aux.fun, "aux_functions.R")) #muliple auxiliary functions

#PARAMETERS
dir.out <- "/mnt/HDS_URCLIM/URCLIM/obs/station/oracle/"
#var.lst <- c("EVAPOTRANS_REF", "SUN_INT", "SUN_DURATION", "PRECIP_DURATION", "WIND_PEAK_SPEED",
#	"PRECIP_1H_MAX", "EVAPOTRANS_REF")
var.lst <- c("TEMP_MAX","HUMIDITY_RELATIVE","TEMP_MIN", "TEMP_AVG",
	"WIND_SPEED", "PRESSURE", "SHORT_WAVE_FROM_SKY", 
	"SUN_INT_HORIZ", "PRECIP_QUANTITY",
	"EVAPOTRANS_REF", "SUN_INT", "SUN_DURATION", "PRECIP_DURATION", "WIND_PEAK_SPEED",
	"PRECIP_1H_MAX", "EVAPOTRANS_REF")

#init.yr & end.yr: both init.yr and end.yr are included in the request.
init.yr <- 1950
end.yr <- 2023 # 2019

table.to.use <- "CLIMATE_GRID"

init.date <- paste0(init.yr, "0101")
end.date <- paste0(end.yr + 1, "0101")

amt.var <- length(var.lst)
yr.lst <- seq(init.yr, end.yr)
amt.yr <- length(yr.lst)

dir.out.to.use <- paste0(dir.out, table.to.use, "/")
dir.create(dir.out.to.use, recursive = T, showWarnings = F)

ora.key <- dbConnect(Oracle(), user = "bertvs", password = "veertien") 	
grid.pt.lst <- dbGetQuery(ora.key, "SELECT PIXEL_ID, PIXEL_LON_CENTER, PIXEL_LAT_CENTER FROM CLIMATE_GRID_PIXEL ORDER BY PIXEL_ID")
amt.grid.pt <- length(grid.pt.lst)

munic.lst <- dbGetQuery(ora.key, "SELECT NAME,CODE_INS from MUNICIPALITY")
munic.code.lst <- munic.lst$CODE_INS
munic.name.lst <- munic.lst$NAME
names(munic.name.lst) <- as.character(munic.code.lst)



lon.lst <- grid.pt.lst$PIXEL_LON_CENTER
lat.lst <- grid.pt.lst$PIXEL_LAT_CENTER
grid.id.lst <- grid.pt.lst$PIXEL_ID
grid.lst <- unique(grid.id.lst)
amt.grid.pt <- length(grid.lst)

amt.loc <- nrow(grid.pt.lst)

for(var.to.use in var.lst){
	cat("Oracle climate grid query for variable: ", var.to.use, "\n")
	
	req.str <- paste0(
		"SELECT CODE_PIXEL_ID_CODE_INS, DATE_END, ", 
		var.to.use, 
		" FROM ", table.to.use,
		" WHERE DATE_END=DATE_BEGIN",
		" AND DATE_BEGIN > = TO_DATE(", init.date, ", 'YYYYMMDD')",
		" AND DATE_END < TO_DATE(", end.date, ", 'YYYYMMDD')",
		" ORDER BY DATE_END, CODE_PIXEL_ID_CODE_INS") #" CODE_PIXEL_ID_CODE_INS<=1360",
	
	all.data <- dbGetQuery(ora.key, req.str)
	colnames(all.data) <- c("location", "time", "value")
	date.lst <- format(all.data$time + 2 * amt.sec.per.hr, tz ="UTC") 
	all.data$time <- as.Date(substr(as.character(date.lst), start = 1, stop = 10))
	
	file.to.save <- paste0(dir.out.to.use, "climate_atlas_", var.to.use, "_", table.to.use, "_", init.yr, "_", end.yr, "_raw.RData")
	save(all.data, file = file.to.save)

	cat("Processing oracle climate grid query for variable: ", var.to.use, "\n")
	
	date.lst <- unique(as.Date(all.data$time))
	all.data$year <- format(all.data$time, "%Y")
	yr.lst.to.use <- unique(all.data$year, width=4, flag = "0")
	all.data$month <- format(all.data$time, "%m", width=2, flag = "0")
	all.data$day <- format(all.data$time, "%d", width=2, flag = "0")
	#all.data$hour <- as.integer(format(all.data$time, "%H"))
	all.data$time <- NULL

	dup.msk <- duplicated(all.data[ , -2])
	if(any(dup.msk)){
		all.data <- all.data[!dup.msk, ]
		cat("warning: ", sum(dup.msk), " duplicates present\n")
	}
	
	
	time.arr <- acast(data = all.data, 
		formula = location ~ year ~ month ~ day,
		value.var = "value",
		fill = NA)

	time.vec <- acast(data = all.data, 
		formula = location ~ year + month + day,
		value.var = "value",
		fill = NA)
	
	loc.lst.tmp <- dimnames(time.arr)[[1]]
	munic.used <- as.character(munic.name.lst[
		loc.lst.tmp[seq((amt.grid.pt + 1), length(loc.lst.tmp))]
		])
	all.loc.lst <- c(loc.lst.tmp[seq(1, amt.grid.pt)], munic.used)
	
	
	time.vec <- array.dim(time.vec , 
		dimnames = list(location = all.loc.lst,
			time = gsub("_", "-", dimnames(time.vec)[[2]])))

	time.arr <- array.dim(time.arr , 
		dimnames = list(location = all.loc.lst,
			year = as.character(yr.lst.to.use), month = mon.lst, 
			day = as.character(day.lst)))
	
	grid.arr <- time.arr[ seq(1, amt.grid.pt), , , ]
	munic.arr <- time.arr[ seq((amt.grid.pt + 1), dim(time.arr)[1]), , , ]
	
	grid.vec <- time.vec[ seq(1, amt.grid.pt), ]
	munic.vec <- time.vec[ seq((amt.grid.pt + 1), dim(time.arr)[1]), ]
	
	file.to.save <- paste0(dir.out.to.use, "climate_atlas_", var.to.use, 
		"_", table.to.use, "_", init.yr, "_", end.yr, ".Rdata")

	save(grid.arr, munic.arr, grid.vec, munic.vec, lon.lst, lat.lst, file = file.to.save)
	rm(grid.arr, munic.arr, grid.vec, munic.vec)
	
}
